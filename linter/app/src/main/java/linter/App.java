/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import java.io.File;
import java.io.FileNotFoundException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        ArrayList<Integer> missingSemicolonLineNumber =readFile("C:\\Users\\STUDENT\\Desktop\\401s\\java-fundamentals\\linter\\app\\src\\test\\resources\\gates.js");

        for (int lineNum: missingSemicolonLineNumber) {
            System.out.println("Line " + lineNum + " : Missing semicolon.");
        }
    }
    public static ArrayList<Integer> readFile(String path){
        Map<Integer, String> gatesFileLines = new HashMap<>();
        ArrayList<Integer> missingSemicolonLineNumber = new ArrayList<>();
        int numOfLines = 1;

        try {
            Scanner gatesFile = new Scanner(new File(path));
            while (gatesFile.hasNextLine()) {
                gatesFileLines.put(numOfLines, gatesFile.nextLine());
                numOfLines++;
            }

            for (Map.Entry lineOfCode : gatesFileLines.entrySet()) {
                int lineNum = (int) lineOfCode.getKey();
                String lineValue = (String) lineOfCode.getValue();
//                System.out.println(lineNum + " : " + lineValue);
                if ((!(lineValue == null || lineValue.contains("{") || lineValue.contains("}") || lineValue.contains("if") || lineValue.isEmpty() || lineValue.contains("else")) && !(lineValue.contains(";")))) {
                    missingSemicolonLineNumber.add(lineNum);
                }
            }
            gatesFile.close();
        } catch (FileNotFoundException e) {
            System.out.println("File Not Found");
        }
        return missingSemicolonLineNumber;
    }
}
